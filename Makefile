#!/usr/bin/env make

# Copyright 2023-2024 Lausanne University and Lausanne University Hospital, Switzerland & Contributors

# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.

.DEFAULT_GOAL := help

# Check if Python is installed, otherwise, exit with an error message
PYTHON=$(shell command -v python)

ifeq (, $(PYTHON))
    $(error "PYTHON not found. Please install or activate an environment with Python 3.10 or higher.")
endif

# Define the project directory
PROJECT_DIR = $(shell dirname $(realpath $(firstword $(MAKEFILE_LIST))))

# Set environment variables for the docker image name and tag
IMAGE_NAME=$(shell python get_container_name.py)

# Define the version tag 
TAG = $(shell python get_version.py)
$(info TAG = $(TAG))
# Replace +, /, _ with - to normalize the tag
# in case the tag includes a branch name
override TAG := $(subst +,-,$(TAG))
override TAG := $(subst /,-,$(TAG))
override TAG := $(subst _,-,$(TAG))
$(info TAG (Normalized) = $(TAG))

IMAGE_TAG=$(IMAGE_NAME):$(TAG)

# Define the build date and vcs reference
BUILD_DATE = $(shell date -u +"%Y-%m-%dT%H:%M:%SZ")
VCS_REF = $(shell git rev-parse --short HEAD)

#build-docker: @ Builds the Docker image
build-docker:
	docker build \
		-f docker/tml-ctp-anonymizer/Dockerfile \
		-t $(IMAGE_TAG) \
		--build-arg BUILD_DATE=$(BUILD_DATE) \
		--build-arg VCS_REF=$(VCS_REF) \
		--build-arg VERSION=$(TAG) .

#install-python: @ Install the python package with pip
.PHONY: install-python
install-python:
	pip install -e .

#install-python-all: @ Install the python package with all dependencies used for development
.PHONY: install-python-all
install-python-all:
	pip install -e .[all]

#build-python-wheel: @ Build the python wheel
.PHONY: build-python-wheel
build-python-wheel: clean-python-build 
	python setup.py sdist bdist_wheel

#clean-python-build: @ Clean the python build directory
.PHONY: clean-python-build
clean-python-build:
	rm -rf build
	rm -rf dist

#install-python-wheel: @ Install the python wheel
.PHONY: install-python-wheel
install-python-wheel: build-python-wheel
	pip install --force-reinstall dist/*.whl

#tests: @ Run all tests
.PHONY: tests
tests: build-docker clean-tests install-python-all
	@echo "Running pytest tests (PROJECT_DIR: $(PROJECT_DIR))..."
	pytest \
		--cov-config "$(PROJECT_DIR)/.coveragerc" \
		--cov-report html:"$(PROJECT_DIR)/tests/report/cov_html" \
		--cov-report xml:"$(PROJECT_DIR)/tests/report/cov.xml" \
		--cov-report lcov:"$(PROJECT_DIR)/tests/report/cov.info" \
		--cov=tml_ctp \
		-s \
		"${@}"

#clean-tests: @ Clean the directories generated by the pytest tests
.PHONY: clean-tests
clean-tests:
	rm -rf $(PROJECT_DIR)/tests/report
	rm -rf $(PROJECT_DIR)/tests/tmp

#build-docs: @ Build the Sphinx HTML documentation
.PHONY: build-docs
build-docs:
	sphinx-build -b html $(PROJECT_DIR)/docs/source $(PROJECT_DIR)/docs/build

#help:	@ List available make command for this project
help:
	@grep -E '[a-zA-Z\.\-]+:.*?@ .*$$' $(MAKEFILE_LIST)| tr -d '#'  | awk 'BEGIN {FS = ":.*?@ "}; {printf "\033[36m%-30s\033[0m %s\n", $$1, $$2}'
